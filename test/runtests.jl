using FNVHash
using Base.Test

# taken from http://www.isthe.com/chongo/tech/comp/fnv/#zero-hash challenge 7
@test fnv32([0xcc,0x24,0x31,0xc4]) == 0
@test fnv32([0xe0, 0x4d, 0x9f, 0xcb]) == 0

# Taken from http://www.isthe.com/chongo/src/fnv/test_fnv.c fnv1a_32_test_vector

TEST(s) = s

function TEST0(s)
    a = Vector{UInt8}(s)
    push!(a, 0x00)
end

R10(s::AbstractString) = s^10
R500(s::AbstractString) = s^500

R10(s) = repeat(s, outer=[10])
R500(s) = repeat(s, outer=[500])

input = Any[
  TEST(""),
  TEST("a"),
  TEST("b"),
  TEST("c"),
  TEST("d"),
  TEST("e"),
  TEST("f"),
  TEST("fo"),
  TEST("foo"),
  TEST("foob"),
  TEST("fooba"),
  TEST("foobar"),
  TEST0(""),
  TEST0("a"),
  TEST0("b"),
  TEST0("c"),
  TEST0("d"),
  TEST0("e"),
  TEST0("f"),
  TEST0("fo"),
  TEST0("foo"),
  TEST0("foob"),
  TEST0("fooba"),
  TEST0("foobar"),
  TEST("ch"),
  TEST("cho"),
  TEST("chon"),
  TEST("chong"),
  TEST("chongo"),
  TEST("chongo "),
  TEST("chongo w"),
  TEST("chongo wa"),
  TEST("chongo was"),
  TEST("chongo was "),
  TEST("chongo was h"),
  TEST("chongo was he"),
  TEST("chongo was her"),
  TEST("chongo was here"),
  TEST("chongo was here!"),
  TEST("chongo was here!\n"),
  TEST0("ch"),
  TEST0("cho"),
  TEST0("chon"),
  TEST0("chong"),
  TEST0("chongo"),
  TEST0("chongo "),
  TEST0("chongo w"),
  TEST0("chongo wa"),
  TEST0("chongo was"),
  TEST0("chongo was "),
  TEST0("chongo was h"),
  TEST0("chongo was he"),
  TEST0("chongo was her"),
  TEST0("chongo was here"),
  TEST0("chongo was here!"),
  TEST0("chongo was here!\n"),
  TEST("cu"),
  TEST("cur"),
  TEST("curd"),
  TEST("curds"),
  TEST("curds "),
  TEST("curds a"),
  TEST("curds an"),
  TEST("curds and"),
  TEST("curds and "),
  TEST("curds and w"),
  TEST("curds and wh"),
  TEST("curds and whe"),
  TEST("curds and whey"),
  TEST("curds and whey\n"),
  TEST0("cu"),
  TEST0("cur"),
  TEST0("curd"),
  TEST0("curds"),
  TEST0("curds "),
  TEST0("curds a"),
  TEST0("curds an"),
  TEST0("curds and"),
  TEST0("curds and "),
  TEST0("curds and w"),
  TEST0("curds and wh"),
  TEST0("curds and whe"),
  TEST0("curds and whey"),
  TEST0("curds and whey\n"),
  TEST("hi"), TEST0("hi"),
  TEST("hello"), TEST0("hello"),
  TEST(b"\xff\x00\x00\x01"), TEST(b"\x01\x00\x00\xff"),
  TEST(b"\xff\x00\x00\x02"), TEST(b"\x02\x00\x00\xff"),
  TEST(b"\xff\x00\x00\x03"), TEST(b"\x03\x00\x00\xff"),
  TEST(b"\xff\x00\x00\x04"), TEST(b"\x04\x00\x00\xff"),
  TEST(b"\x40\x51\x4e\x44"), TEST(b"\x44\x4e\x51\x40"),
  TEST(b"\x40\x51\x4e\x4a"), TEST(b"\x4a\x4e\x51\x40"),
  TEST(b"\x40\x51\x4e\x54"), TEST(b"\x54\x4e\x51\x40"),
  TEST("127.0.0.1"), TEST0("127.0.0.1"),
  TEST("127.0.0.2"), TEST0("127.0.0.2"),
  TEST("127.0.0.3"), TEST0("127.0.0.3"),
  TEST("64.81.78.68"), TEST0("64.81.78.68"),
  TEST("64.81.78.74"), TEST0("64.81.78.74"),
  TEST("64.81.78.84"), TEST0("64.81.78.84"),
  TEST("feedface"), TEST0("feedface"),
  TEST("feedfacedaffdeed"), TEST0("feedfacedaffdeed"),
  TEST("feedfacedeadbeef"), TEST0("feedfacedeadbeef"),
  TEST("line 1\nline 2\nline 3"),
  TEST("chongo <Landon Curt Noll> /\\../\\"),
  TEST0("chongo <Landon Curt Noll> /\\../\\"),
  TEST("chongo (Landon Curt Noll) /\\../\\"),
  TEST0("chongo (Landon Curt Noll) /\\../\\"),
  TEST("http://antwrp.gsfc.nasa.gov/apod/astropix.html"),
  TEST("http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash"),
  TEST("http://epod.usra.edu/"),
  TEST("http://exoplanet.eu/"),
  TEST("http://hvo.wr.usgs.gov/cam3/"),
  TEST("http://hvo.wr.usgs.gov/cams/HMcam/"),
  TEST("http://hvo.wr.usgs.gov/kilauea/update/deformation.html"),
  TEST("http://hvo.wr.usgs.gov/kilauea/update/images.html"),
  TEST("http://hvo.wr.usgs.gov/kilauea/update/maps.html"),
  TEST("http://hvo.wr.usgs.gov/volcanowatch/current_issue.html"),
  TEST("http://neo.jpl.nasa.gov/risk/"),
  TEST("http://norvig.com/21-days.html"),
  TEST("http://primes.utm.edu/curios/home.php"),
  TEST("http://slashdot.org/"),
  TEST("http://tux.wr.usgs.gov/Maps/155.25-19.5.html"),
  TEST("http://volcano.wr.usgs.gov/kilaueastatus.php"),
  TEST("http://www.avo.alaska.edu/activity/Redoubt.php"),
  TEST("http://www.dilbert.com/fast/"),
  TEST("http://www.fourmilab.ch/gravitation/orbits/"),
  TEST("http://www.fpoa.net/"),
  TEST("http://www.ioccc.org/index.html"),
  TEST("http://www.isthe.com/cgi-bin/number.cgi"),
  TEST("http://www.isthe.com/chongo/bio.html"),
  TEST("http://www.isthe.com/chongo/index.html"),
  TEST("http://www.isthe.com/chongo/src/calc/lucas-calc"),
  TEST("http://www.isthe.com/chongo/tech/astro/venus2004.html"),
  TEST("http://www.isthe.com/chongo/tech/astro/vita.html"),
  TEST("http://www.isthe.com/chongo/tech/comp/c/expert.html"),
  TEST("http://www.isthe.com/chongo/tech/comp/calc/index.html"),
  TEST("http://www.isthe.com/chongo/tech/comp/fnv/index.html"),
  TEST("http://www.isthe.com/chongo/tech/math/number/howhigh.html"),
  TEST("http://www.isthe.com/chongo/tech/math/number/number.html"),
  TEST("http://www.isthe.com/chongo/tech/math/prime/mersenne.html"),
  TEST("http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest"),
  TEST("http://www.lavarnd.org/cgi-bin/corpspeak.cgi"),
  TEST("http://www.lavarnd.org/cgi-bin/haiku.cgi"),
  TEST("http://www.lavarnd.org/cgi-bin/rand-none.cgi"),
  TEST("http://www.lavarnd.org/cgi-bin/randdist.cgi"),
  TEST("http://www.lavarnd.org/index.html"),
  TEST("http://www.lavarnd.org/what/nist-test.html"),
  TEST("http://www.macosxhints.com/"),
  TEST("http://www.mellis.com/"),
  TEST("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm"),
  TEST("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm"),
  TEST("http://www.paulnoll.com/"),
  TEST("http://www.pepysdiary.com/"),
  TEST("http://www.sciencenews.org/index/home/activity/view"),
  TEST("http://www.skyandtelescope.com/"),
  TEST("http://www.sput.nl/~rob/sirius.html"),
  TEST("http://www.systemexperts.com/"),
  TEST("http://www.tq-international.com/phpBB3/index.php"),
  TEST("http://www.travelquesttours.com/index.htm"),
  TEST("http://www.wunderground.com/global/stations/89606.html"),
  TEST(R10("21701")),
  TEST(R10("M21701")),
  TEST(R10("2^21701-1")),
  TEST(R10(b"\x54\xc5")),
  TEST(R10(b"\xc5\x54")),
  TEST(R10("23209")),
  TEST(R10("M23209")),
  TEST(R10("2^23209-1")),
  TEST(R10(b"\x5a\xa9")),
  TEST(R10(b"\xa9\x5a")),
  TEST(R10("391581216093")),
  TEST(R10("391581*2^216093-1")),
  TEST(R10(b"\x05\xf9\x9d\x03\x4c\x81")),
  TEST(R10("FEDCBA9876543210")),
  TEST(R10(b"\xfe\xdc\xba\x98\x76\x54\x32\x10")),
  TEST(R10("EFCDAB8967452301")),
  TEST(R10(b"\xef\xcd\xab\x89\x67\x45\x23\x01")),
  TEST(R10("0123456789ABCDEF")),
  TEST(R10(b"\x01\x23\x45\x67\x89\xab\xcd\xef")),
  TEST(R10("1032547698BADCFE")),
  TEST(R10(b"\x10\x32\x54\x76\x98\xba\xdc\xfe")),
  TEST(R500(b"\x00")),
  TEST(R500(b"\x07")),
  TEST(R500("~")),
  TEST(R500(b"\x7f"))
]

results = [
    0x811c9dc5,
    0xe40c292c,
    0xe70c2de5,
    0xe60c2c52,
    0xe10c2473,
    0xe00c22e0,
    0xe30c2799,
    0x6222e842,
    0xa9f37ed7,
    0x3f5076ef,
    0x39aaa18a,
    0xbf9cf968,
    0x050c5d1f,
    0x2b24d044,
    0x9d2c3f7f,
    0x7729c516,
    0xb91d6109,
    0x931ae6a0,
    0x052255db,
    0xbef39fe6,
    0x6150ac75,
    0x9aab3a3d,
    0x519c4c3e,
    0x0c1c9eb8,
    0x5f299f4e,
    0xef8580f3,
    0xac297727,
    0x4546b9c0,
    0xbd564e7d,
    0x6bdd5c67,
    0xdd77ed30,
    0xf4ca9683,
    0x4aeb9bd0,
    0xe0e67ad0,
    0xc2d32fa8,
    0x7f743fb7,
    0x6900631f,
    0xc59c990e,
    0x448524fd,
    0xd49930d5,
    0x1c85c7ca,
    0x0229fe89,
    0x2c469265,
    0xce566940,
    0x8bdd8ec7,
    0x34787625,
    0xd3ca6290,
    0xddeaf039,
    0xc0e64870,
    0xdad35570,
    0x5a740578,
    0x5b004d15,
    0x6a9c09cd,
    0x2384f10a,
    0xda993a47,
    0x8227df4f,
    0x4c298165,
    0xfc563735,
    0x8cb91483,
    0x775bf5d0,
    0xd5c428d0,
    0x34cc0ea3,
    0xea3b4cb7,
    0x8e59f029,
    0x2094de2b,
    0xa65a0ad4,
    0x9bbee5f4,
    0xbe836343,
    0x22d5344e,
    0x19a1470c,
    0x4a56b1ff,
    0x70b8e86f,
    0x0a5b4a39,
    0xb5c3f670,
    0x53cc3f70,
    0xc03b0a99,
    0x7259c415,
    0x4095108b,
    0x7559bdb1,
    0xb3bf0bbc,
    0x2183ff1c,
    0x2bd54279,
    0x23a156ca,
    0x64e2d7e4,
    0x683af69a,
    0xaed2346e,
    0x4f9f2cab,
    0x02935131,
    0xc48fb86d,
    0x2269f369,
    0xc18fb3b4,
    0x50ef1236,
    0xc28fb547,
    0x96c3bf47,
    0xbf8fb08e,
    0xf3e4d49c,
    0x32179058,
    0x280bfee6,
    0x30178d32,
    0x21addaf8,
    0x4217a988,
    0x772633d6,
    0x08a3d11e,
    0xb7e2323a,
    0x07a3cf8b,
    0x91dfb7d1,
    0x06a3cdf8,
    0x6bdd3d68,
    0x1d5636a7,
    0xd5b808e5,
    0x1353e852,
    0xbf16b916,
    0xa55b89ed,
    0x3c1a2017,
    0x0588b13c,
    0xf22f0174,
    0xe83641e1,
    0x6e69b533,
    0xf1760448,
    0x64c8bd58,
    0x97b4ea23,
    0x9a4e92e6,
    0xcfb14012,
    0xf01b2511,
    0x0bbb59c3,
    0xce524afa,
    0xdd16ef45,
    0x60648bb3,
    0x7fa4bcfc,
    0x5053ae17,
    0xc9302890,
    0x956ded32,
    0x9136db84,
    0xdf9d3323,
    0x32bb6cd0,
    0xc8f8385b,
    0xeb08bfba,
    0x62cc8e3d,
    0xc3e20f5c,
    0x39e97f17,
    0x7837b203,
    0x319e877b,
    0xd3e63f89,
    0x29b50b38,
    0x5ed678b8,
    0xb0d5b793,
    0x52450be5,
    0xfa72d767,
    0x95066709,
    0x7f52e123,
    0x76966481,
    0x063258b0,
    0x2ded6e8a,
    0xb07d7c52,
    0xd0c71b71,
    0xf684f1bd,
    0x868ecfa8,
    0xf794f684,
    0xd19701c3,
    0x346e171e,
    0x91f8f676,
    0x0bf58848,
    0x6317b6d1,
    0xafad4c54,
    0x0f25681e,
    0x91b18d49,
    0x7d61c12e,
    0x5147d25c,
    0x9a8b6805,
    0x4cd2a447,
    0x1e549b14,
    0x2fe1b574,
    0xcf0cd31e,
    0x6c471669,
    0x0e5eef1e,
    0x2bed3602,
    0xb26249e0,
    0x2c9b86a4,
    0xe415e2bb,
    0x18a98d1d,
    0xb7df8b7b,
    0x241e9075,
    0x063f70dd,
    0x0295aed9,
    0x56a7f781,
    0x253bc645,
    0x46610921,
    0x7c1577f9,
    0x512b2851,
    0x76823999,
    0xc0586935,
    0xf3415c85,
    0x0ae4ff65,
    0x58b79725,
    0xdea43aa5,
    0x2bb3be35,
    0xea777a45,
    0x8f21c305,
    0x5c9d0865,
    0xfa823dd5,
    0x21a27271,
    0x83c5c6d5,
    0x813b0881
]

for (i, r) in zip(input, results)
    @test fnv32(i) == r
end
